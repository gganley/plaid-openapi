/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.5.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// BankTransferGetRequest BankTransferGetRequest defines the request schema for `/bank_transfer/get`
type BankTransferGetRequest struct {
	// Your Plaid API `client_id`.
	ClientId *string `json:"client_id,omitempty"`
	// Your Plaid API `secret`.
	Secret *string `json:"secret,omitempty"`
	// Plaidâ€™s unique identifier for a bank transfer.
	BankTransferId       string `json:"bank_transfer_id"`
	AdditionalProperties map[string]interface{}
}

type _BankTransferGetRequest BankTransferGetRequest

// NewBankTransferGetRequest instantiates a new BankTransferGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankTransferGetRequest(bankTransferId string) *BankTransferGetRequest {
	this := BankTransferGetRequest{}
	this.BankTransferId = bankTransferId
	return &this
}

// NewBankTransferGetRequestWithDefaults instantiates a new BankTransferGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankTransferGetRequestWithDefaults() *BankTransferGetRequest {
	this := BankTransferGetRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BankTransferGetRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankTransferGetRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BankTransferGetRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BankTransferGetRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *BankTransferGetRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankTransferGetRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *BankTransferGetRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *BankTransferGetRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetBankTransferId returns the BankTransferId field value
func (o *BankTransferGetRequest) GetBankTransferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankTransferId
}

// GetBankTransferIdOk returns a tuple with the BankTransferId field value
// and a boolean to check if the value has been set.
func (o *BankTransferGetRequest) GetBankTransferIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankTransferId, true
}

// SetBankTransferId sets field value
func (o *BankTransferGetRequest) SetBankTransferId(v string) {
	o.BankTransferId = v
}

func (o BankTransferGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["bank_transfer_id"] = o.BankTransferId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BankTransferGetRequest) UnmarshalJSON(bytes []byte) (err error) {
	varBankTransferGetRequest := _BankTransferGetRequest{}

	if err = json.Unmarshal(bytes, &varBankTransferGetRequest); err == nil {
		*o = BankTransferGetRequest(varBankTransferGetRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "bank_transfer_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBankTransferGetRequest struct {
	value *BankTransferGetRequest
	isSet bool
}

func (v NullableBankTransferGetRequest) Get() *BankTransferGetRequest {
	return v.value
}

func (v *NullableBankTransferGetRequest) Set(val *BankTransferGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBankTransferGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBankTransferGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankTransferGetRequest(val *BankTransferGetRequest) *NullableBankTransferGetRequest {
	return &NullableBankTransferGetRequest{value: val, isSet: true}
}

func (v NullableBankTransferGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankTransferGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
