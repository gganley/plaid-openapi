/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.5.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PaymentStatusUpdateWebhook Fired when the status of a payment has changed.
type PaymentStatusUpdateWebhook struct {
	// `PAYMENT_INITIATION`
	WebhookType string `json:"webhook_type"`
	// `PAYMENT_STATUS_UPDATE`
	WebhookCode string `json:"webhook_code"`
	// The `payment_id` for the payment being updated
	PaymentId string `json:"payment_id"`
	// The new status of the payment.  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.  `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
	NewPaymentStatus string `json:"new_payment_status"`
	// The previous status of the payment.  `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.  `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.  `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.  `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.  `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.  `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.  `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.  `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
	OldPaymentStatus string `json:"old_payment_status"`
	// The timestamp of the update, in ISO 8601 format, e.g. `\"2017-09-14T14:42:19.350Z\"`
	Timestamp            string        `json:"timestamp"`
	Error                NullableError `json:"error,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentStatusUpdateWebhook PaymentStatusUpdateWebhook

// NewPaymentStatusUpdateWebhook instantiates a new PaymentStatusUpdateWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentStatusUpdateWebhook(webhookType string, webhookCode string, paymentId string, newPaymentStatus string, oldPaymentStatus string, timestamp string) *PaymentStatusUpdateWebhook {
	this := PaymentStatusUpdateWebhook{}
	this.WebhookType = webhookType
	this.WebhookCode = webhookCode
	this.PaymentId = paymentId
	this.NewPaymentStatus = newPaymentStatus
	this.OldPaymentStatus = oldPaymentStatus
	this.Timestamp = timestamp
	return &this
}

// NewPaymentStatusUpdateWebhookWithDefaults instantiates a new PaymentStatusUpdateWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentStatusUpdateWebhookWithDefaults() *PaymentStatusUpdateWebhook {
	this := PaymentStatusUpdateWebhook{}
	return &this
}

// GetWebhookType returns the WebhookType field value
func (o *PaymentStatusUpdateWebhook) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetWebhookTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *PaymentStatusUpdateWebhook) SetWebhookType(v string) {
	o.WebhookType = v
}

// GetWebhookCode returns the WebhookCode field value
func (o *PaymentStatusUpdateWebhook) GetWebhookCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookCode
}

// GetWebhookCodeOk returns a tuple with the WebhookCode field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetWebhookCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookCode, true
}

// SetWebhookCode sets field value
func (o *PaymentStatusUpdateWebhook) SetWebhookCode(v string) {
	o.WebhookCode = v
}

// GetPaymentId returns the PaymentId field value
func (o *PaymentStatusUpdateWebhook) GetPaymentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetPaymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentId, true
}

// SetPaymentId sets field value
func (o *PaymentStatusUpdateWebhook) SetPaymentId(v string) {
	o.PaymentId = v
}

// GetNewPaymentStatus returns the NewPaymentStatus field value
func (o *PaymentStatusUpdateWebhook) GetNewPaymentStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPaymentStatus
}

// GetNewPaymentStatusOk returns a tuple with the NewPaymentStatus field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetNewPaymentStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPaymentStatus, true
}

// SetNewPaymentStatus sets field value
func (o *PaymentStatusUpdateWebhook) SetNewPaymentStatus(v string) {
	o.NewPaymentStatus = v
}

// GetOldPaymentStatus returns the OldPaymentStatus field value
func (o *PaymentStatusUpdateWebhook) GetOldPaymentStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldPaymentStatus
}

// GetOldPaymentStatusOk returns a tuple with the OldPaymentStatus field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetOldPaymentStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldPaymentStatus, true
}

// SetOldPaymentStatus sets field value
func (o *PaymentStatusUpdateWebhook) SetOldPaymentStatus(v string) {
	o.OldPaymentStatus = v
}

// GetTimestamp returns the Timestamp field value
func (o *PaymentStatusUpdateWebhook) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *PaymentStatusUpdateWebhook) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *PaymentStatusUpdateWebhook) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentStatusUpdateWebhook) GetError() Error {
	if o == nil || o.Error.Get() == nil {
		var ret Error
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentStatusUpdateWebhook) GetErrorOk() (*Error, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *PaymentStatusUpdateWebhook) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableError and assigns it to the Error field.
func (o *PaymentStatusUpdateWebhook) SetError(v Error) {
	o.Error.Set(&v)
}

// SetErrorNil sets the value for Error to be an explicit nil
func (o *PaymentStatusUpdateWebhook) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *PaymentStatusUpdateWebhook) UnsetError() {
	o.Error.Unset()
}

func (o PaymentStatusUpdateWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook_type"] = o.WebhookType
	}
	if true {
		toSerialize["webhook_code"] = o.WebhookCode
	}
	if true {
		toSerialize["payment_id"] = o.PaymentId
	}
	if true {
		toSerialize["new_payment_status"] = o.NewPaymentStatus
	}
	if true {
		toSerialize["old_payment_status"] = o.OldPaymentStatus
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PaymentStatusUpdateWebhook) UnmarshalJSON(bytes []byte) (err error) {
	varPaymentStatusUpdateWebhook := _PaymentStatusUpdateWebhook{}

	if err = json.Unmarshal(bytes, &varPaymentStatusUpdateWebhook); err == nil {
		*o = PaymentStatusUpdateWebhook(varPaymentStatusUpdateWebhook)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_type")
		delete(additionalProperties, "webhook_code")
		delete(additionalProperties, "payment_id")
		delete(additionalProperties, "new_payment_status")
		delete(additionalProperties, "old_payment_status")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "error")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentStatusUpdateWebhook struct {
	value *PaymentStatusUpdateWebhook
	isSet bool
}

func (v NullablePaymentStatusUpdateWebhook) Get() *PaymentStatusUpdateWebhook {
	return v.value
}

func (v *NullablePaymentStatusUpdateWebhook) Set(val *PaymentStatusUpdateWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentStatusUpdateWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentStatusUpdateWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentStatusUpdateWebhook(val *PaymentStatusUpdateWebhook) *NullablePaymentStatusUpdateWebhook {
	return &NullablePaymentStatusUpdateWebhook{value: val, isSet: true}
}

func (v NullablePaymentStatusUpdateWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentStatusUpdateWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
