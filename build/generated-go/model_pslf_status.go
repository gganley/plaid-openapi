/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.5.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PSLFStatus Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is Fedloan (`ins_116527`).
type PSLFStatus struct {
	// The estimated date borrower will have completed 120 qualifying monthly payments. Returned in ISO 8601 format (YYYY-MM-DD).
	EstimatedEligibilityDate NullableString `json:"estimated_eligibility_date,omitempty"`
	// The number of qualifying payments that have been made.
	PaymentsMade NullableFloat32 `json:"payments_made,omitempty"`
	// The number of qualifying payments remaining.
	PaymentsRemaining    NullableFloat32 `json:"payments_remaining,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PSLFStatus PSLFStatus

// NewPSLFStatus instantiates a new PSLFStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPSLFStatus() *PSLFStatus {
	this := PSLFStatus{}
	return &this
}

// NewPSLFStatusWithDefaults instantiates a new PSLFStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPSLFStatusWithDefaults() *PSLFStatus {
	this := PSLFStatus{}
	return &this
}

// GetEstimatedEligibilityDate returns the EstimatedEligibilityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PSLFStatus) GetEstimatedEligibilityDate() string {
	if o == nil || o.EstimatedEligibilityDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.EstimatedEligibilityDate.Get()
}

// GetEstimatedEligibilityDateOk returns a tuple with the EstimatedEligibilityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PSLFStatus) GetEstimatedEligibilityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EstimatedEligibilityDate.Get(), o.EstimatedEligibilityDate.IsSet()
}

// HasEstimatedEligibilityDate returns a boolean if a field has been set.
func (o *PSLFStatus) HasEstimatedEligibilityDate() bool {
	if o != nil && o.EstimatedEligibilityDate.IsSet() {
		return true
	}

	return false
}

// SetEstimatedEligibilityDate gets a reference to the given NullableString and assigns it to the EstimatedEligibilityDate field.
func (o *PSLFStatus) SetEstimatedEligibilityDate(v string) {
	o.EstimatedEligibilityDate.Set(&v)
}

// SetEstimatedEligibilityDateNil sets the value for EstimatedEligibilityDate to be an explicit nil
func (o *PSLFStatus) SetEstimatedEligibilityDateNil() {
	o.EstimatedEligibilityDate.Set(nil)
}

// UnsetEstimatedEligibilityDate ensures that no value is present for EstimatedEligibilityDate, not even an explicit nil
func (o *PSLFStatus) UnsetEstimatedEligibilityDate() {
	o.EstimatedEligibilityDate.Unset()
}

// GetPaymentsMade returns the PaymentsMade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PSLFStatus) GetPaymentsMade() float32 {
	if o == nil || o.PaymentsMade.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PaymentsMade.Get()
}

// GetPaymentsMadeOk returns a tuple with the PaymentsMade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PSLFStatus) GetPaymentsMadeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentsMade.Get(), o.PaymentsMade.IsSet()
}

// HasPaymentsMade returns a boolean if a field has been set.
func (o *PSLFStatus) HasPaymentsMade() bool {
	if o != nil && o.PaymentsMade.IsSet() {
		return true
	}

	return false
}

// SetPaymentsMade gets a reference to the given NullableFloat32 and assigns it to the PaymentsMade field.
func (o *PSLFStatus) SetPaymentsMade(v float32) {
	o.PaymentsMade.Set(&v)
}

// SetPaymentsMadeNil sets the value for PaymentsMade to be an explicit nil
func (o *PSLFStatus) SetPaymentsMadeNil() {
	o.PaymentsMade.Set(nil)
}

// UnsetPaymentsMade ensures that no value is present for PaymentsMade, not even an explicit nil
func (o *PSLFStatus) UnsetPaymentsMade() {
	o.PaymentsMade.Unset()
}

// GetPaymentsRemaining returns the PaymentsRemaining field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PSLFStatus) GetPaymentsRemaining() float32 {
	if o == nil || o.PaymentsRemaining.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PaymentsRemaining.Get()
}

// GetPaymentsRemainingOk returns a tuple with the PaymentsRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PSLFStatus) GetPaymentsRemainingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentsRemaining.Get(), o.PaymentsRemaining.IsSet()
}

// HasPaymentsRemaining returns a boolean if a field has been set.
func (o *PSLFStatus) HasPaymentsRemaining() bool {
	if o != nil && o.PaymentsRemaining.IsSet() {
		return true
	}

	return false
}

// SetPaymentsRemaining gets a reference to the given NullableFloat32 and assigns it to the PaymentsRemaining field.
func (o *PSLFStatus) SetPaymentsRemaining(v float32) {
	o.PaymentsRemaining.Set(&v)
}

// SetPaymentsRemainingNil sets the value for PaymentsRemaining to be an explicit nil
func (o *PSLFStatus) SetPaymentsRemainingNil() {
	o.PaymentsRemaining.Set(nil)
}

// UnsetPaymentsRemaining ensures that no value is present for PaymentsRemaining, not even an explicit nil
func (o *PSLFStatus) UnsetPaymentsRemaining() {
	o.PaymentsRemaining.Unset()
}

func (o PSLFStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EstimatedEligibilityDate.IsSet() {
		toSerialize["estimated_eligibility_date"] = o.EstimatedEligibilityDate.Get()
	}
	if o.PaymentsMade.IsSet() {
		toSerialize["payments_made"] = o.PaymentsMade.Get()
	}
	if o.PaymentsRemaining.IsSet() {
		toSerialize["payments_remaining"] = o.PaymentsRemaining.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PSLFStatus) UnmarshalJSON(bytes []byte) (err error) {
	varPSLFStatus := _PSLFStatus{}

	if err = json.Unmarshal(bytes, &varPSLFStatus); err == nil {
		*o = PSLFStatus(varPSLFStatus)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "estimated_eligibility_date")
		delete(additionalProperties, "payments_made")
		delete(additionalProperties, "payments_remaining")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePSLFStatus struct {
	value *PSLFStatus
	isSet bool
}

func (v NullablePSLFStatus) Get() *PSLFStatus {
	return v.value
}

func (v *NullablePSLFStatus) Set(val *PSLFStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePSLFStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePSLFStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePSLFStatus(val *PSLFStatus) *NullablePSLFStatus {
	return &NullablePSLFStatus{value: val, isSet: true}
}

func (v NullablePSLFStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePSLFStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
