/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.5.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// MortgageLiability Contains details about a mortgage account.
type MortgageLiability struct {
	// The ID of the account that this liability belongs to.
	AccountId NullableString `json:"account_id,omitempty"`
	// The account number of the loan.
	AccountNumber string `json:"account_number"`
	// The current outstanding amount charged for late payment.
	CurrentLateFee NullableFloat32 `json:"current_late_fee,omitempty"`
	// Total amount held in escrow to pay taxes and insurance on behalf of the borrower.
	EscrowBalance NullableFloat32 `json:"escrow_balance,omitempty"`
	// Indicates whether the borrower has private mortgage insurance in effect.
	HasPmi NullableBool `json:"has_pmi,omitempty"`
	// Indicates whether the borrower will pay a penalty for early payoff of mortgage.
	HasPrepaymentPenalty NullableBool          `json:"has_prepayment_penalty,omitempty"`
	InterestRate         *MortgageInterestRate `json:"interest_rate,omitempty"`
	// The amount of the last payment.
	LastPaymentAmount NullableFloat32 `json:"last_payment_amount,omitempty"`
	// The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
	LastPaymentDate NullableString `json:"last_payment_date,omitempty"`
	// Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.
	LoanTypeDescription NullableString `json:"loan_type_description,omitempty"`
	// Full duration of mortgage as at origination (e.g. `10 year`).
	LoanTerm NullableString `json:"loan_term,omitempty"`
	// Original date on which mortgage is due in full. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
	MaturityDate NullableString `json:"maturity_date,omitempty"`
	// The amount of the next payment.
	NextMonthlyPayment NullableFloat32 `json:"next_monthly_payment,omitempty"`
	// The due date for the next payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
	NextPaymentDueDate NullableString `json:"next_payment_due_date,omitempty"`
	// The date on which the loan was initially lent. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
	OriginationDate NullableString `json:"origination_date,omitempty"`
	// The original principal balance of the mortgage.
	OriginationPrincipalAmount NullableFloat32 `json:"origination_principal_amount,omitempty"`
	// Amount of loan (principal + interest) past due for payment.
	PastDueAmount   NullableFloat32          `json:"past_due_amount,omitempty"`
	PropertyAddress *MortgagePropertyAddress `json:"property_address,omitempty"`
	// The year to date (YTD) interest paid.
	YtdInterestPaid NullableFloat32 `json:"ytd_interest_paid,omitempty"`
	// The YTD principal paid.
	YtdPrincipalPaid     NullableFloat32 `json:"ytd_principal_paid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MortgageLiability MortgageLiability

// NewMortgageLiability instantiates a new MortgageLiability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMortgageLiability(accountNumber string) *MortgageLiability {
	this := MortgageLiability{}
	this.AccountNumber = accountNumber
	return &this
}

// NewMortgageLiabilityWithDefaults instantiates a new MortgageLiability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMortgageLiabilityWithDefaults() *MortgageLiability {
	this := MortgageLiability{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *MortgageLiability) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *MortgageLiability) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *MortgageLiability) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *MortgageLiability) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAccountNumber returns the AccountNumber field value
func (o *MortgageLiability) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *MortgageLiability) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *MortgageLiability) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetCurrentLateFee returns the CurrentLateFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetCurrentLateFee() float32 {
	if o == nil || o.CurrentLateFee.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CurrentLateFee.Get()
}

// GetCurrentLateFeeOk returns a tuple with the CurrentLateFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetCurrentLateFeeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentLateFee.Get(), o.CurrentLateFee.IsSet()
}

// HasCurrentLateFee returns a boolean if a field has been set.
func (o *MortgageLiability) HasCurrentLateFee() bool {
	if o != nil && o.CurrentLateFee.IsSet() {
		return true
	}

	return false
}

// SetCurrentLateFee gets a reference to the given NullableFloat32 and assigns it to the CurrentLateFee field.
func (o *MortgageLiability) SetCurrentLateFee(v float32) {
	o.CurrentLateFee.Set(&v)
}

// SetCurrentLateFeeNil sets the value for CurrentLateFee to be an explicit nil
func (o *MortgageLiability) SetCurrentLateFeeNil() {
	o.CurrentLateFee.Set(nil)
}

// UnsetCurrentLateFee ensures that no value is present for CurrentLateFee, not even an explicit nil
func (o *MortgageLiability) UnsetCurrentLateFee() {
	o.CurrentLateFee.Unset()
}

// GetEscrowBalance returns the EscrowBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetEscrowBalance() float32 {
	if o == nil || o.EscrowBalance.Get() == nil {
		var ret float32
		return ret
	}
	return *o.EscrowBalance.Get()
}

// GetEscrowBalanceOk returns a tuple with the EscrowBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetEscrowBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EscrowBalance.Get(), o.EscrowBalance.IsSet()
}

// HasEscrowBalance returns a boolean if a field has been set.
func (o *MortgageLiability) HasEscrowBalance() bool {
	if o != nil && o.EscrowBalance.IsSet() {
		return true
	}

	return false
}

// SetEscrowBalance gets a reference to the given NullableFloat32 and assigns it to the EscrowBalance field.
func (o *MortgageLiability) SetEscrowBalance(v float32) {
	o.EscrowBalance.Set(&v)
}

// SetEscrowBalanceNil sets the value for EscrowBalance to be an explicit nil
func (o *MortgageLiability) SetEscrowBalanceNil() {
	o.EscrowBalance.Set(nil)
}

// UnsetEscrowBalance ensures that no value is present for EscrowBalance, not even an explicit nil
func (o *MortgageLiability) UnsetEscrowBalance() {
	o.EscrowBalance.Unset()
}

// GetHasPmi returns the HasPmi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetHasPmi() bool {
	if o == nil || o.HasPmi.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasPmi.Get()
}

// GetHasPmiOk returns a tuple with the HasPmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetHasPmiOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasPmi.Get(), o.HasPmi.IsSet()
}

// HasHasPmi returns a boolean if a field has been set.
func (o *MortgageLiability) HasHasPmi() bool {
	if o != nil && o.HasPmi.IsSet() {
		return true
	}

	return false
}

// SetHasPmi gets a reference to the given NullableBool and assigns it to the HasPmi field.
func (o *MortgageLiability) SetHasPmi(v bool) {
	o.HasPmi.Set(&v)
}

// SetHasPmiNil sets the value for HasPmi to be an explicit nil
func (o *MortgageLiability) SetHasPmiNil() {
	o.HasPmi.Set(nil)
}

// UnsetHasPmi ensures that no value is present for HasPmi, not even an explicit nil
func (o *MortgageLiability) UnsetHasPmi() {
	o.HasPmi.Unset()
}

// GetHasPrepaymentPenalty returns the HasPrepaymentPenalty field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetHasPrepaymentPenalty() bool {
	if o == nil || o.HasPrepaymentPenalty.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasPrepaymentPenalty.Get()
}

// GetHasPrepaymentPenaltyOk returns a tuple with the HasPrepaymentPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetHasPrepaymentPenaltyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasPrepaymentPenalty.Get(), o.HasPrepaymentPenalty.IsSet()
}

// HasHasPrepaymentPenalty returns a boolean if a field has been set.
func (o *MortgageLiability) HasHasPrepaymentPenalty() bool {
	if o != nil && o.HasPrepaymentPenalty.IsSet() {
		return true
	}

	return false
}

// SetHasPrepaymentPenalty gets a reference to the given NullableBool and assigns it to the HasPrepaymentPenalty field.
func (o *MortgageLiability) SetHasPrepaymentPenalty(v bool) {
	o.HasPrepaymentPenalty.Set(&v)
}

// SetHasPrepaymentPenaltyNil sets the value for HasPrepaymentPenalty to be an explicit nil
func (o *MortgageLiability) SetHasPrepaymentPenaltyNil() {
	o.HasPrepaymentPenalty.Set(nil)
}

// UnsetHasPrepaymentPenalty ensures that no value is present for HasPrepaymentPenalty, not even an explicit nil
func (o *MortgageLiability) UnsetHasPrepaymentPenalty() {
	o.HasPrepaymentPenalty.Unset()
}

// GetInterestRate returns the InterestRate field value if set, zero value otherwise.
func (o *MortgageLiability) GetInterestRate() MortgageInterestRate {
	if o == nil || o.InterestRate == nil {
		var ret MortgageInterestRate
		return ret
	}
	return *o.InterestRate
}

// GetInterestRateOk returns a tuple with the InterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MortgageLiability) GetInterestRateOk() (*MortgageInterestRate, bool) {
	if o == nil || o.InterestRate == nil {
		return nil, false
	}
	return o.InterestRate, true
}

// HasInterestRate returns a boolean if a field has been set.
func (o *MortgageLiability) HasInterestRate() bool {
	if o != nil && o.InterestRate != nil {
		return true
	}

	return false
}

// SetInterestRate gets a reference to the given MortgageInterestRate and assigns it to the InterestRate field.
func (o *MortgageLiability) SetInterestRate(v MortgageInterestRate) {
	o.InterestRate = &v
}

// GetLastPaymentAmount returns the LastPaymentAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetLastPaymentAmount() float32 {
	if o == nil || o.LastPaymentAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.LastPaymentAmount.Get()
}

// GetLastPaymentAmountOk returns a tuple with the LastPaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetLastPaymentAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastPaymentAmount.Get(), o.LastPaymentAmount.IsSet()
}

// HasLastPaymentAmount returns a boolean if a field has been set.
func (o *MortgageLiability) HasLastPaymentAmount() bool {
	if o != nil && o.LastPaymentAmount.IsSet() {
		return true
	}

	return false
}

// SetLastPaymentAmount gets a reference to the given NullableFloat32 and assigns it to the LastPaymentAmount field.
func (o *MortgageLiability) SetLastPaymentAmount(v float32) {
	o.LastPaymentAmount.Set(&v)
}

// SetLastPaymentAmountNil sets the value for LastPaymentAmount to be an explicit nil
func (o *MortgageLiability) SetLastPaymentAmountNil() {
	o.LastPaymentAmount.Set(nil)
}

// UnsetLastPaymentAmount ensures that no value is present for LastPaymentAmount, not even an explicit nil
func (o *MortgageLiability) UnsetLastPaymentAmount() {
	o.LastPaymentAmount.Unset()
}

// GetLastPaymentDate returns the LastPaymentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetLastPaymentDate() string {
	if o == nil || o.LastPaymentDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastPaymentDate.Get()
}

// GetLastPaymentDateOk returns a tuple with the LastPaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetLastPaymentDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastPaymentDate.Get(), o.LastPaymentDate.IsSet()
}

// HasLastPaymentDate returns a boolean if a field has been set.
func (o *MortgageLiability) HasLastPaymentDate() bool {
	if o != nil && o.LastPaymentDate.IsSet() {
		return true
	}

	return false
}

// SetLastPaymentDate gets a reference to the given NullableString and assigns it to the LastPaymentDate field.
func (o *MortgageLiability) SetLastPaymentDate(v string) {
	o.LastPaymentDate.Set(&v)
}

// SetLastPaymentDateNil sets the value for LastPaymentDate to be an explicit nil
func (o *MortgageLiability) SetLastPaymentDateNil() {
	o.LastPaymentDate.Set(nil)
}

// UnsetLastPaymentDate ensures that no value is present for LastPaymentDate, not even an explicit nil
func (o *MortgageLiability) UnsetLastPaymentDate() {
	o.LastPaymentDate.Unset()
}

// GetLoanTypeDescription returns the LoanTypeDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetLoanTypeDescription() string {
	if o == nil || o.LoanTypeDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.LoanTypeDescription.Get()
}

// GetLoanTypeDescriptionOk returns a tuple with the LoanTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetLoanTypeDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoanTypeDescription.Get(), o.LoanTypeDescription.IsSet()
}

// HasLoanTypeDescription returns a boolean if a field has been set.
func (o *MortgageLiability) HasLoanTypeDescription() bool {
	if o != nil && o.LoanTypeDescription.IsSet() {
		return true
	}

	return false
}

// SetLoanTypeDescription gets a reference to the given NullableString and assigns it to the LoanTypeDescription field.
func (o *MortgageLiability) SetLoanTypeDescription(v string) {
	o.LoanTypeDescription.Set(&v)
}

// SetLoanTypeDescriptionNil sets the value for LoanTypeDescription to be an explicit nil
func (o *MortgageLiability) SetLoanTypeDescriptionNil() {
	o.LoanTypeDescription.Set(nil)
}

// UnsetLoanTypeDescription ensures that no value is present for LoanTypeDescription, not even an explicit nil
func (o *MortgageLiability) UnsetLoanTypeDescription() {
	o.LoanTypeDescription.Unset()
}

// GetLoanTerm returns the LoanTerm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetLoanTerm() string {
	if o == nil || o.LoanTerm.Get() == nil {
		var ret string
		return ret
	}
	return *o.LoanTerm.Get()
}

// GetLoanTermOk returns a tuple with the LoanTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetLoanTermOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoanTerm.Get(), o.LoanTerm.IsSet()
}

// HasLoanTerm returns a boolean if a field has been set.
func (o *MortgageLiability) HasLoanTerm() bool {
	if o != nil && o.LoanTerm.IsSet() {
		return true
	}

	return false
}

// SetLoanTerm gets a reference to the given NullableString and assigns it to the LoanTerm field.
func (o *MortgageLiability) SetLoanTerm(v string) {
	o.LoanTerm.Set(&v)
}

// SetLoanTermNil sets the value for LoanTerm to be an explicit nil
func (o *MortgageLiability) SetLoanTermNil() {
	o.LoanTerm.Set(nil)
}

// UnsetLoanTerm ensures that no value is present for LoanTerm, not even an explicit nil
func (o *MortgageLiability) UnsetLoanTerm() {
	o.LoanTerm.Unset()
}

// GetMaturityDate returns the MaturityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetMaturityDate() string {
	if o == nil || o.MaturityDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaturityDate.Get()
}

// GetMaturityDateOk returns a tuple with the MaturityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetMaturityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaturityDate.Get(), o.MaturityDate.IsSet()
}

// HasMaturityDate returns a boolean if a field has been set.
func (o *MortgageLiability) HasMaturityDate() bool {
	if o != nil && o.MaturityDate.IsSet() {
		return true
	}

	return false
}

// SetMaturityDate gets a reference to the given NullableString and assigns it to the MaturityDate field.
func (o *MortgageLiability) SetMaturityDate(v string) {
	o.MaturityDate.Set(&v)
}

// SetMaturityDateNil sets the value for MaturityDate to be an explicit nil
func (o *MortgageLiability) SetMaturityDateNil() {
	o.MaturityDate.Set(nil)
}

// UnsetMaturityDate ensures that no value is present for MaturityDate, not even an explicit nil
func (o *MortgageLiability) UnsetMaturityDate() {
	o.MaturityDate.Unset()
}

// GetNextMonthlyPayment returns the NextMonthlyPayment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetNextMonthlyPayment() float32 {
	if o == nil || o.NextMonthlyPayment.Get() == nil {
		var ret float32
		return ret
	}
	return *o.NextMonthlyPayment.Get()
}

// GetNextMonthlyPaymentOk returns a tuple with the NextMonthlyPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetNextMonthlyPaymentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextMonthlyPayment.Get(), o.NextMonthlyPayment.IsSet()
}

// HasNextMonthlyPayment returns a boolean if a field has been set.
func (o *MortgageLiability) HasNextMonthlyPayment() bool {
	if o != nil && o.NextMonthlyPayment.IsSet() {
		return true
	}

	return false
}

// SetNextMonthlyPayment gets a reference to the given NullableFloat32 and assigns it to the NextMonthlyPayment field.
func (o *MortgageLiability) SetNextMonthlyPayment(v float32) {
	o.NextMonthlyPayment.Set(&v)
}

// SetNextMonthlyPaymentNil sets the value for NextMonthlyPayment to be an explicit nil
func (o *MortgageLiability) SetNextMonthlyPaymentNil() {
	o.NextMonthlyPayment.Set(nil)
}

// UnsetNextMonthlyPayment ensures that no value is present for NextMonthlyPayment, not even an explicit nil
func (o *MortgageLiability) UnsetNextMonthlyPayment() {
	o.NextMonthlyPayment.Unset()
}

// GetNextPaymentDueDate returns the NextPaymentDueDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetNextPaymentDueDate() string {
	if o == nil || o.NextPaymentDueDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.NextPaymentDueDate.Get()
}

// GetNextPaymentDueDateOk returns a tuple with the NextPaymentDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetNextPaymentDueDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPaymentDueDate.Get(), o.NextPaymentDueDate.IsSet()
}

// HasNextPaymentDueDate returns a boolean if a field has been set.
func (o *MortgageLiability) HasNextPaymentDueDate() bool {
	if o != nil && o.NextPaymentDueDate.IsSet() {
		return true
	}

	return false
}

// SetNextPaymentDueDate gets a reference to the given NullableString and assigns it to the NextPaymentDueDate field.
func (o *MortgageLiability) SetNextPaymentDueDate(v string) {
	o.NextPaymentDueDate.Set(&v)
}

// SetNextPaymentDueDateNil sets the value for NextPaymentDueDate to be an explicit nil
func (o *MortgageLiability) SetNextPaymentDueDateNil() {
	o.NextPaymentDueDate.Set(nil)
}

// UnsetNextPaymentDueDate ensures that no value is present for NextPaymentDueDate, not even an explicit nil
func (o *MortgageLiability) UnsetNextPaymentDueDate() {
	o.NextPaymentDueDate.Unset()
}

// GetOriginationDate returns the OriginationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetOriginationDate() string {
	if o == nil || o.OriginationDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.OriginationDate.Get()
}

// GetOriginationDateOk returns a tuple with the OriginationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetOriginationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginationDate.Get(), o.OriginationDate.IsSet()
}

// HasOriginationDate returns a boolean if a field has been set.
func (o *MortgageLiability) HasOriginationDate() bool {
	if o != nil && o.OriginationDate.IsSet() {
		return true
	}

	return false
}

// SetOriginationDate gets a reference to the given NullableString and assigns it to the OriginationDate field.
func (o *MortgageLiability) SetOriginationDate(v string) {
	o.OriginationDate.Set(&v)
}

// SetOriginationDateNil sets the value for OriginationDate to be an explicit nil
func (o *MortgageLiability) SetOriginationDateNil() {
	o.OriginationDate.Set(nil)
}

// UnsetOriginationDate ensures that no value is present for OriginationDate, not even an explicit nil
func (o *MortgageLiability) UnsetOriginationDate() {
	o.OriginationDate.Unset()
}

// GetOriginationPrincipalAmount returns the OriginationPrincipalAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetOriginationPrincipalAmount() float32 {
	if o == nil || o.OriginationPrincipalAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.OriginationPrincipalAmount.Get()
}

// GetOriginationPrincipalAmountOk returns a tuple with the OriginationPrincipalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetOriginationPrincipalAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginationPrincipalAmount.Get(), o.OriginationPrincipalAmount.IsSet()
}

// HasOriginationPrincipalAmount returns a boolean if a field has been set.
func (o *MortgageLiability) HasOriginationPrincipalAmount() bool {
	if o != nil && o.OriginationPrincipalAmount.IsSet() {
		return true
	}

	return false
}

// SetOriginationPrincipalAmount gets a reference to the given NullableFloat32 and assigns it to the OriginationPrincipalAmount field.
func (o *MortgageLiability) SetOriginationPrincipalAmount(v float32) {
	o.OriginationPrincipalAmount.Set(&v)
}

// SetOriginationPrincipalAmountNil sets the value for OriginationPrincipalAmount to be an explicit nil
func (o *MortgageLiability) SetOriginationPrincipalAmountNil() {
	o.OriginationPrincipalAmount.Set(nil)
}

// UnsetOriginationPrincipalAmount ensures that no value is present for OriginationPrincipalAmount, not even an explicit nil
func (o *MortgageLiability) UnsetOriginationPrincipalAmount() {
	o.OriginationPrincipalAmount.Unset()
}

// GetPastDueAmount returns the PastDueAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetPastDueAmount() float32 {
	if o == nil || o.PastDueAmount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.PastDueAmount.Get()
}

// GetPastDueAmountOk returns a tuple with the PastDueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetPastDueAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PastDueAmount.Get(), o.PastDueAmount.IsSet()
}

// HasPastDueAmount returns a boolean if a field has been set.
func (o *MortgageLiability) HasPastDueAmount() bool {
	if o != nil && o.PastDueAmount.IsSet() {
		return true
	}

	return false
}

// SetPastDueAmount gets a reference to the given NullableFloat32 and assigns it to the PastDueAmount field.
func (o *MortgageLiability) SetPastDueAmount(v float32) {
	o.PastDueAmount.Set(&v)
}

// SetPastDueAmountNil sets the value for PastDueAmount to be an explicit nil
func (o *MortgageLiability) SetPastDueAmountNil() {
	o.PastDueAmount.Set(nil)
}

// UnsetPastDueAmount ensures that no value is present for PastDueAmount, not even an explicit nil
func (o *MortgageLiability) UnsetPastDueAmount() {
	o.PastDueAmount.Unset()
}

// GetPropertyAddress returns the PropertyAddress field value if set, zero value otherwise.
func (o *MortgageLiability) GetPropertyAddress() MortgagePropertyAddress {
	if o == nil || o.PropertyAddress == nil {
		var ret MortgagePropertyAddress
		return ret
	}
	return *o.PropertyAddress
}

// GetPropertyAddressOk returns a tuple with the PropertyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MortgageLiability) GetPropertyAddressOk() (*MortgagePropertyAddress, bool) {
	if o == nil || o.PropertyAddress == nil {
		return nil, false
	}
	return o.PropertyAddress, true
}

// HasPropertyAddress returns a boolean if a field has been set.
func (o *MortgageLiability) HasPropertyAddress() bool {
	if o != nil && o.PropertyAddress != nil {
		return true
	}

	return false
}

// SetPropertyAddress gets a reference to the given MortgagePropertyAddress and assigns it to the PropertyAddress field.
func (o *MortgageLiability) SetPropertyAddress(v MortgagePropertyAddress) {
	o.PropertyAddress = &v
}

// GetYtdInterestPaid returns the YtdInterestPaid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetYtdInterestPaid() float32 {
	if o == nil || o.YtdInterestPaid.Get() == nil {
		var ret float32
		return ret
	}
	return *o.YtdInterestPaid.Get()
}

// GetYtdInterestPaidOk returns a tuple with the YtdInterestPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetYtdInterestPaidOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.YtdInterestPaid.Get(), o.YtdInterestPaid.IsSet()
}

// HasYtdInterestPaid returns a boolean if a field has been set.
func (o *MortgageLiability) HasYtdInterestPaid() bool {
	if o != nil && o.YtdInterestPaid.IsSet() {
		return true
	}

	return false
}

// SetYtdInterestPaid gets a reference to the given NullableFloat32 and assigns it to the YtdInterestPaid field.
func (o *MortgageLiability) SetYtdInterestPaid(v float32) {
	o.YtdInterestPaid.Set(&v)
}

// SetYtdInterestPaidNil sets the value for YtdInterestPaid to be an explicit nil
func (o *MortgageLiability) SetYtdInterestPaidNil() {
	o.YtdInterestPaid.Set(nil)
}

// UnsetYtdInterestPaid ensures that no value is present for YtdInterestPaid, not even an explicit nil
func (o *MortgageLiability) UnsetYtdInterestPaid() {
	o.YtdInterestPaid.Unset()
}

// GetYtdPrincipalPaid returns the YtdPrincipalPaid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MortgageLiability) GetYtdPrincipalPaid() float32 {
	if o == nil || o.YtdPrincipalPaid.Get() == nil {
		var ret float32
		return ret
	}
	return *o.YtdPrincipalPaid.Get()
}

// GetYtdPrincipalPaidOk returns a tuple with the YtdPrincipalPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MortgageLiability) GetYtdPrincipalPaidOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.YtdPrincipalPaid.Get(), o.YtdPrincipalPaid.IsSet()
}

// HasYtdPrincipalPaid returns a boolean if a field has been set.
func (o *MortgageLiability) HasYtdPrincipalPaid() bool {
	if o != nil && o.YtdPrincipalPaid.IsSet() {
		return true
	}

	return false
}

// SetYtdPrincipalPaid gets a reference to the given NullableFloat32 and assigns it to the YtdPrincipalPaid field.
func (o *MortgageLiability) SetYtdPrincipalPaid(v float32) {
	o.YtdPrincipalPaid.Set(&v)
}

// SetYtdPrincipalPaidNil sets the value for YtdPrincipalPaid to be an explicit nil
func (o *MortgageLiability) SetYtdPrincipalPaidNil() {
	o.YtdPrincipalPaid.Set(nil)
}

// UnsetYtdPrincipalPaid ensures that no value is present for YtdPrincipalPaid, not even an explicit nil
func (o *MortgageLiability) UnsetYtdPrincipalPaid() {
	o.YtdPrincipalPaid.Unset()
}

func (o MortgageLiability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if o.CurrentLateFee.IsSet() {
		toSerialize["current_late_fee"] = o.CurrentLateFee.Get()
	}
	if o.EscrowBalance.IsSet() {
		toSerialize["escrow_balance"] = o.EscrowBalance.Get()
	}
	if o.HasPmi.IsSet() {
		toSerialize["has_pmi"] = o.HasPmi.Get()
	}
	if o.HasPrepaymentPenalty.IsSet() {
		toSerialize["has_prepayment_penalty"] = o.HasPrepaymentPenalty.Get()
	}
	if o.InterestRate != nil {
		toSerialize["interest_rate"] = o.InterestRate
	}
	if o.LastPaymentAmount.IsSet() {
		toSerialize["last_payment_amount"] = o.LastPaymentAmount.Get()
	}
	if o.LastPaymentDate.IsSet() {
		toSerialize["last_payment_date"] = o.LastPaymentDate.Get()
	}
	if o.LoanTypeDescription.IsSet() {
		toSerialize["loan_type_description"] = o.LoanTypeDescription.Get()
	}
	if o.LoanTerm.IsSet() {
		toSerialize["loan_term"] = o.LoanTerm.Get()
	}
	if o.MaturityDate.IsSet() {
		toSerialize["maturity_date"] = o.MaturityDate.Get()
	}
	if o.NextMonthlyPayment.IsSet() {
		toSerialize["next_monthly_payment"] = o.NextMonthlyPayment.Get()
	}
	if o.NextPaymentDueDate.IsSet() {
		toSerialize["next_payment_due_date"] = o.NextPaymentDueDate.Get()
	}
	if o.OriginationDate.IsSet() {
		toSerialize["origination_date"] = o.OriginationDate.Get()
	}
	if o.OriginationPrincipalAmount.IsSet() {
		toSerialize["origination_principal_amount"] = o.OriginationPrincipalAmount.Get()
	}
	if o.PastDueAmount.IsSet() {
		toSerialize["past_due_amount"] = o.PastDueAmount.Get()
	}
	if o.PropertyAddress != nil {
		toSerialize["property_address"] = o.PropertyAddress
	}
	if o.YtdInterestPaid.IsSet() {
		toSerialize["ytd_interest_paid"] = o.YtdInterestPaid.Get()
	}
	if o.YtdPrincipalPaid.IsSet() {
		toSerialize["ytd_principal_paid"] = o.YtdPrincipalPaid.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MortgageLiability) UnmarshalJSON(bytes []byte) (err error) {
	varMortgageLiability := _MortgageLiability{}

	if err = json.Unmarshal(bytes, &varMortgageLiability); err == nil {
		*o = MortgageLiability(varMortgageLiability)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "current_late_fee")
		delete(additionalProperties, "escrow_balance")
		delete(additionalProperties, "has_pmi")
		delete(additionalProperties, "has_prepayment_penalty")
		delete(additionalProperties, "interest_rate")
		delete(additionalProperties, "last_payment_amount")
		delete(additionalProperties, "last_payment_date")
		delete(additionalProperties, "loan_type_description")
		delete(additionalProperties, "loan_term")
		delete(additionalProperties, "maturity_date")
		delete(additionalProperties, "next_monthly_payment")
		delete(additionalProperties, "next_payment_due_date")
		delete(additionalProperties, "origination_date")
		delete(additionalProperties, "origination_principal_amount")
		delete(additionalProperties, "past_due_amount")
		delete(additionalProperties, "property_address")
		delete(additionalProperties, "ytd_interest_paid")
		delete(additionalProperties, "ytd_principal_paid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMortgageLiability struct {
	value *MortgageLiability
	isSet bool
}

func (v NullableMortgageLiability) Get() *MortgageLiability {
	return v.value
}

func (v *NullableMortgageLiability) Set(val *MortgageLiability) {
	v.value = val
	v.isSet = true
}

func (v NullableMortgageLiability) IsSet() bool {
	return v.isSet
}

func (v *NullableMortgageLiability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMortgageLiability(val *MortgageLiability) *NullableMortgageLiability {
	return &NullableMortgageLiability{value: val, isSet: true}
}

func (v NullableMortgageLiability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMortgageLiability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
